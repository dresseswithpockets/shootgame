# game
DONE add entity-room collision
DONE add entity-entity collision & flagged pushing
DONE use generational handles for integration and entity referencing
DONE add game pausing & simple "PAUSED" overlay text
DONE add interactable doors
DONE remove "boxes" entity array prototype, replace with monolithic entity array
DONE add BoI-style floor plan generation (BFS branch)
DONE add weapon/source/thingie
DONE add sprite flipping to player based on direction of travel & shoot direction
TODO move repel-overlap-loop outside of Repel script and into a script with higher priority, so that all repel's occur in the same frame
DONE add a basic linear bullet
DONE add shooting to the player
DONE add health & damage to the player
DONE add death screen
DONE replace sprite sheet with individual sprites - this can be optimized into a sprite sheet later
DONE fix linear bullet directional sprite
DONE add shoot SFX
DONE add player sprite flashing during iframes
DONE add damage SFX
DONE add basic music loop
TODO add death hitsleep
DONE when player dies, stop all music & play death music loop on death screen
DONE add door entry SFX
DONE add jumper enemy
DONE add heavy/burster enemy
DONE add enemy placement to floor generation
DONE add room locking and unlocking as players defeat enemies
TODO add special boss room
TODO add lilguy boss
TODO add special boss door animation (fade out to black, fade in from black)
TODO add hole to next floor after boss dies (circle fade in, circle fade out)
TODO make first room on first floor always spawn as an item room
TODO add stat modifier & item system (item children have a dictionary of modifier info, calculated in process)
TODO add item: Use Meter To Shoot Faster
TODO add rare item: Gain +1 Max Weapon
TODO add rare item: Gain +1 Max Heart
TODO add item room
TODO add item drop chance to enemies
TODO add item: When Hit, Stay Invincible For Longer
TODO add item: Use Meter For +1 Temp Weapon
TODO add item: Gain Meter Faster
TODO add item: Mobs Drop Items More Often
TODO add rare item: Use Meter To Clear All Bullets
TODO add rare item: When Meter Active, Absorb 1 Damage
TODO render mini-map menu showing dungeon layout
TODO gamepad axis deadzone remapping (godot might do this for us...)
TODO experiment with z-ordering (e.g. just sort by their y position)
TODO experiment with rainworld style parallax tiling

# design
spike: what is the kind of feeling we want the player to have with the game?
    - progression through knowledge
        - item interactions arent necessarily documented directly in the game, but the player may find them by playing
        - a "journal" or "rule book" or "appendix" could provide details about all of the different items, enemies, rooms, weapons, etc that the player comes across
            - some may be available by default, some may be shown but scratched/inked out (a la. inscryption)

    - progression through unlocks
        - player could unlock new weapons, items, characters, difficulties, enemies, room types, as they complete more challenges
        - even new "knowledge" (journal entries, for example) could be unlocked

    - progression through mechanical skill
        - natural progression through experiencing the dungeons, enemies, weapons, items, etc

    - the adrenaline of "getting out of a tight spot". Big tension, big release, big reward
        - maybe this is something that can be done dynamically? how do we identify what a "tight spot" is? low health? lots of enemies/bullets in the player's vacinity? how do we reward them for getting out of that tight spot? maybe we can give them a little handicap when theyre in a tight spot to give them a bigger opportunity to get out of that tight spot?

    - how do we design the dungeon around tension & release? 
        - we could have floors with big tension up front, and nice constant low-tension for the rest of the floor
        - we can also have floors that are pretty easy but build up in difficulty as the player progresses, up to the boss
        - we dont necessarily need the big floor boss to be the last room on each floor, we can place these fights dynamically. 
            - Items could even change the boss room placement frequency & logic.
        - floors could be themed e.g. Inscryption or Hades

# ux
DONE refactor KeyState to allow for multiple keys mapped to a single action
DONE refactor move_* and shoot_* actions to behave like virtual axes which can be backed by gamepad axes or button pairs
TODO add basic options menu with volume controls for each bus
TODO add options menu for remappable keybinds

# devex
TODO hot-reloading
TODO add in-game performance menu - should show FPS, real frame time, capped frame time used for fixed integrations, the number of entities on screen, etc
TODO add in-game quake-style developer console
TODO add in-game developer menu for setting dungeon parameters, room parameters, entity parameters, altering the shape of the dungeon, placing/deleting entities, etc. dev menu should pause the update loop by default, and allow the user to "step" the update loop
TODO notarget mode - disables NPCs from targetting the player
TODO select entities in devmenu - visual entities can be selected by clicking on them, and that will highlight their attributes in the devmenu tree
